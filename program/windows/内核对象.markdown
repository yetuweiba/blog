#windows内核对象

1. 在windows中，什么是内核对象？

*内核对象*对应的是*用户/GDI(Graphical Device Interface)对象*，两者最显著的不同是创建函数的不同：几乎所有创建内核对象的函数都有一个用于指定安全属性的参数。

内核对象大致有以下的种类：

> 访问令牌对象，事件对象， 文件对象， 文件映射对象，I/O完成端口对象，作业对象，邮件槽对象，管道对象，进程对象，信号量对象，线程对象，可等待的计时器对象以及线程池对象。


2 .如何创建和关闭内核对象？
 
可以使用对应的api来创建内核对象。在进程中有句柄表来表明这个进程有多少内核对象。关闭内核对象使用*CloseHandle*函数，内核对象在系统内部是**引用计数**的，这意味着进程结束的时候，内核对象可能还没有被销毁，只是引用计数减1，但是最好不要使用被关闭的内核对象，因为无法保证它的有效性。

3.内核对象的共享方法？

在某些时候我们需要在进程中共享内核对象，在windows中，有三种方法可以用来共享内核对象：

a. 继承<br>
在创建内核对象时，需要使用默认的安全性来创建，同时要将SECURITY_ATTRIBUTES中的bInhertHandle置为true。这样在创建子进程的时候，将创建的参数--bInheritHandles设置为true，这样就可以子进程就可以访问父进程相应的内核对象了。

b. 为对象命名<br>
首先a进程创建一个内核对象，并对其命名为A,如果b进程想访问A，那么可以创建一个相同的内核对象，将其命名为A，如果b对象有足够的权限，那么新创建的内核对象将指向A，b进程就可以访问A了。

c. 使用DuplicateHandle方法<br>
A进程调用此方法，将B进程中的内核对象共享到C进程中，
